{
    "WebObjects Release" = "WebObjects 5.0";
    encoding = NSUTF8StringEncoding;
    variables = {
        assignmentGroup = {
            class = WODisplayGroup;
            dataSource = {
                class = EODatabaseDataSource;
                editingContext = localContext;
                fetchSpecification = {
                    class = EOFetchSpecification;
                    entityName = Assignment;
                    fetchLimit = 0;
                    refreshesRefetchedObjects = YES;
                    qualifier = {
                        class = EOOrQualifier;
                        qualifiers = (
                        {
                            class = EOKeyValueQualifier;
                            key = offerings.courseOffering;
                            selectorName = "doesContain:";
                            value = {_key = courseOffering; class = EOQualifierVariable; };
                        },
                        {
                            class = EOKeyValueQualifier;
                            key = author;
                            selectorName = "isEqualTo:";
                            value = {_key = user; class = EOQualifierVariable; };
                        }
                        );
                    };
                };
            };
            fetchesOnLoad = NO;
            formatForLikeQualifier = "%@*";
            localKeys = ();
            numberOfObjectsPerBatch = 0;
            selectsFirstObjectAfterFetch = YES;
            sortOrdering = (
                {
                    class = EOSortOrdering;
                    key = offerings.dueDate;
                    selectorName = "compareDescending:";
                }
            );
        };
        publishedScriptGroup = {
            class = WODisplayGroup;
            dataSource = {
                class = EODatabaseDataSource;
                editingContext = localContext;
                fetchSpecification = {
                    class = EOFetchSpecification;
                    entityName = GradingPlugin;
                    fetchLimit = 0;
                    isDeep = YES;
                    refreshesRefetchedObjects = YES;
                    qualifier = {
                        class = EOKeyValueQualifier;
                        key = isPublished;
                        selectorName = "isEqualTo:";
                        value = { class = java.lang.Number; value = 1; };
                    };
                };
            };
            fetchesOnLoad = YES;
            formatForLikeQualifier = "%@*";
            localKeys = ();
            numberOfObjectsPerBatch = 0;
            selectsFirstObjectAfterFetch = YES;
            sortOrdering = (
                {
                    class = EOSortOrdering;
                    key = displayableName;
                    selectorName = "compareCaseInsensitiveAscending:";
                }
            );
        };
        scriptGroup = {
            class = WODisplayGroup;
            dataSource = {
                class = EODatabaseDataSource;
                editingContext = localContext;
                fetchSpecification = {
                    class = EOFetchSpecification;
                    entityName = GradingPlugin;
                    fetchLimit = 0;
                    isDeep = YES;
                    refreshesRefetchedObjects = YES;
                    qualifier = {
                        class = EOAndQualifier;
                        qualifiers = (
                               {
                                class = EOKeyValueQualifier;
                                key = isPublished;
                                selectorName = "isNotEqualTo:";
                                value = { class = java.lang.Number; value = 1; };
                               },
                            {
                                class = EOOrQualifier;
                                qualifiers = (
                                    {
                                        class = EOKeyValueQualifier;
                                        key = author;
                                        selectorName = "isEqualTo:";
                                        value = {_key = user;
                                            class = EOQualifierVariable; };
                                    }
//                    				,
//                    				{
//                        				class = EOKeyValueQualifier;
//                        				key = courseOfferings.course;
//                        				selectorName = "doesContain:";
//                        				value = {_key = course;
//                        						 class = EOQualifierVariable; };
//                    				}
                                );
                               }
                           );
                    };
                };
            };
            fetchesOnLoad = NO;
            formatForLikeQualifier = "%@*";
            localKeys = ();
            numberOfObjectsPerBatch = 0;
            selectsFirstObjectAfterFetch = YES;
            sortOrdering = (
                {
                    class = EOSortOrdering;
                    key = displayableName;
                    selectorName = "compareCaseInsensitiveAscending:";
                }
            );
        };
    };
}
